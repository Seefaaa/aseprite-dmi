name: CI
on:
  push:
    branches:
      - main
      - dev
    paths:
      - '.cargo/**'
      - '.github/workflows/**'
      - 'lib/**'
      - 'scripts/**'
      - 'tools/**'
      - 'lua54.dll'
      - 'package.json'
  pull_request:
    branches:
      - main
    paths:
      - '.cargo/**'
      - '.github/workflows/**'
      - 'lib/**'
      - 'scripts/**'
      - 'tools/**'
      - 'lua54.dll'
      - 'package.json'
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: './lib -> target'
      - name: Run rustfmt
        working-directory: lib
        run: |
          cargo fmt -- --check
      - name: Run clippy
        working-directory: lib
        run: |
          cargo clippy --locked -- -D warnings
  build:
    needs: lint
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        include:
          - os: windows-latest
            name: Windows
            rust-target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            name: Linux
            rust-target: x86_64-unknown-linux-gnu
          - os: macos-latest
            name: macOS
            rust-target: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    name: Build - ${{ matrix.name }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.rust-target }}
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: './lib -> target'
      - name: Run tests
        working-directory: lib
        run: |
          cargo test --target ${{ matrix.rust-target }} --locked
      - name: Run build
        working-directory: lib
        run: |
          cargo build --target ${{ matrix.rust-target }} --locked --release
      - name: Copy Lua with other files and zip
        run: |
          python tools/build.py --ci ${{ matrix.rust-target }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            dist/*
          if-no-files-found: error
  release:
    needs: build
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          prerelease: false
          files: |
            dist/*
